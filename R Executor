	--Server Side / Internal By Server Side Script!
	
	local ScreenGui = Instance.new("ScreenGui")
	local Frame = Instance.new("Frame")
	local TextBox = Instance.new("TextBox")
	local TextButton = Instance.new("TextButton")
	local TextButton_2 = Instance.new("TextButton")
	local TextButton_3 = Instance.new("TextButton")
	local Frame_2 = Instance.new("Frame")
	local TextButton_4 = Instance.new("TextButton")
	local TextButton_5 = Instance.new("TextButton")
	local TextButton_6 = Instance.new("TextButton")
	
	ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
	
	Frame.Parent = ScreenGui
	Frame.BackgroundColor3 = Color3.fromRGB(0, 0 , 0)
	Frame.BorderSizePixel = 0
	Frame.Position = UDim2.new(0.282012194, 0, 0.260122687, 0)
	Frame.Size = UDim2.new(0, 572, 0, 390)
	
	TextBox.Parent = Frame
	TextBox.BackgroundColor3 = Color3.fromRGB(0, 0 , 0)
	TextBox.BorderSizePixel = 0
	TextBox.Position = UDim2.new(0.0297202803, 0, 0.0435897447, 0)
	TextBox.Size = UDim2.new(0, 537, 0, 276)
	TextBox.Font = Enum.Font.SourceSans
	TextBox.Text = ""
	TextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextBox.TextSize = 20.000
	TextBox.TextXAlignment = Enum.TextXAlignment.Left
	TextBox.TextYAlignment = Enum.TextYAlignment.Top
	
	TextButton.Parent = Frame
	TextButton.BackgroundColor3 = Color3.fromRGB(34, 34 , 34)
	TextButton.BorderSizePixel = 0
	TextButton.Position = UDim2.new(0.0297202803, 0, 0.807692289, 0)
	TextButton.Size = UDim2.new(0, 200, 0, 50)
	TextButton.Font = Enum.Font.SourceSans
	TextButton.Text = "Client Execute"
	TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextButton.TextSize = 28.000
	TextButton.TextWrapped = true
	
	TextButton_2.Parent = Frame
	TextButton_2.BackgroundColor3 = Color3.fromRGB(34, 34 ,34)
	TextButton_2.BorderSizePixel = 0
	TextButton_2.Position = UDim2.new(0.618881166, 0, 0.807692289, 0)
	TextButton_2.Size = UDim2.new(0, 200, 0, 50)
	TextButton_2.Font = Enum.Font.SourceSans
	TextButton_2.Text = "Server Execute"
	TextButton_2.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextButton_2.TextSize = 28.000
	TextButton_2.TextWrapped = true
	
	TextButton_3.Parent = Frame
	TextButton_3.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
	TextButton_3.BorderSizePixel = 0
	TextButton_3.Position = UDim2.new(0.41083914, 0, 0.807692289, 0)
	TextButton_3.Size = UDim2.new(0, 102, 0, 50)
	TextButton_3.Font = Enum.Font.SourceSans
	TextButton_3.Text = "Clear"
	TextButton_3.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextButton_3.TextSize = 28.000
	TextButton_3.TextWrapped = true
	
	Frame_2.Parent = Frame
	Frame_2.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
	Frame_2.BorderSizePixel = 0
	Frame_2.Position = UDim2.new(1, 0, 0, 0)
	Frame_2.Size = UDim2.new(0, 93, 0, 390)
	
	TextButton_4.Parent = Frame_2
	TextButton_4.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	TextButton_4.BorderSizePixel = 0
	TextButton_4.Position = UDim2.new(0.0752688199, 0, 0.146153852, 0)
	TextButton_4.Size = UDim2.new(0, 78, 0, 76)
	TextButton_4.Font = Enum.Font.SourceSans
	TextButton_4.Text = "Inject"
	TextButton_4.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextButton_4.TextSize = 29.000
	
	TextButton_5.Parent = Frame_2
	TextButton_5.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	TextButton_5.BorderSizePixel = 0
	TextButton_5.Position = UDim2.new(0.0752688199, 0, 0.402564108, 0)
	TextButton_5.Size = UDim2.new(0, 78, 0, 76)
	TextButton_5.Font = Enum.Font.SourceSans
	TextButton_5.Text = "Speed"
	TextButton_5.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextButton_5.TextSize = 29.000
	
	TextButton_6.Parent = Frame_2
	TextButton_6.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	TextButton_6.BorderSizePixel = 0
	TextButton_6.Position = UDim2.new(0.0752688199, 0, 0.658974409, 0)
	TextButton_6.Size = UDim2.new(0, 78, 0, 76)
	TextButton_6.Font = Enum.Font.SourceSans
	TextButton_6.Text = "X"
	TextButton_6.TextColor3 = Color3.fromRGB(255, 0, 0)
	TextButton_6.TextSize = 29.000
	
	
	local function ZIUYTVS_fake_script() -- TextButton.LocalScript 
		local script = Instance.new('LocalScript', TextButton)
	
		script.Parent.MouseButton1Click:Connect(function()
			assert(loadstring(script.Parent.Parent.TextBox.Text))()
		end)
	end
	coroutine.wrap(ZIUYTVS_fake_script)()
	local function HASJH_fake_script() -- TextButton_2.LocalScript 
		local script = Instance.new('LocalScript', TextButton_2)
	
		script.Parent.MouseButton1Click:Connect(function()
			game.ReplicatedStorage.RemoteEvent:FireServer(script.Parent.Parent.TextBox.Text)
		end)
	end
	coroutine.wrap(HASJH_fake_script)()
	local function UAZSPPI_fake_script() -- TextButton_3.LocalScript 
		local script = Instance.new('LocalScript', TextButton_3)
	
		script.Parent.MouseButton1Click:Connect(function()
			script.Parent.Parent.TextBox.Text = "Cleared!"
			wait(.1)
			script.Parent.Parent.TextBox.Text = ""
		end)
	end
	coroutine.wrap(UAZSPPI_fake_script)()
	local function ACWZSQI_fake_script() -- TextButton_4.LocalScript 
		local script = Instance.new('LocalScript', TextButton_4)
	
		script.Parent.MouseButton1Click:Connect(function()
			-- Backdoor Finder Script 
-- og by Indica

local findGG = true -- Exodus ServerSide

local FindSkidded = true -- Finds that one skidded

local Target = game -- Second Wave Target

local scanFolders = true -- If you want to scan the folders within a target

local scanAll = true -- Continue scanning after finding a vulnerable remote

local WaitTime = 0 -- Reccomended wait time is 2

local hasSynapse = false -- Enables Synapse functions to save the found remotes to a text file

local generateScript = true -- Generates a script to be used for the first found vulnerable remote

local scanFullTarget = true -- Scans everything. Everything.

local BlackList = {  } -- Items to exclude from the scanning process "item1", "item2", "item3" etc
---------------------------------------------------------------------------
---------------------------------------------------------------------------
local LocalPlayer = game:GetService("Players").LocalPlayer
local Script = [[game:GetService("Players").]]..tostring(LocalPlayer.Name)..[[.Character.Head:Remove()]]
local playerDied = false
local foundBackdoor = false
local vulnCount = 0;
local foundItems = {}
local toWrite = ""
tempList = {}
print("------------------------------------------------------------------")
print("IMPORTANT : Do not die whilst using this.")
print("------------------------------------------------------------------")
print("R Executor Injector -- Made By Icalock")
print("------------------------------------------------------------------")

for _,mem in pairs(BlackList) do -- testing purposes
	table.insert(tempList, mem)
end

function writeFile(text)
	Synapse:WriteFile(tostring(game.PlaceId).." -- Backdoor Finder.txt", text)
end

function inTable(table, element)
	for i,v in pairs(table) do
		if v == element then
			return true
		end
	end
	return false
end

function scanPlayer()
	if not LocalPlayer.Character:FindFirstChild("Head") then
		playerDied = true
	end
end

function showHint(text)
game.StarterGui:SetCore("SendNotification", {
	Title = "R Executor Injector"; 
	Text = text; 
})
end

function waitForPlayer()
	if LocalPlayer.Character:FindFirstChild("Head") then
		return true
	else
		return false
	end
end

showHint("Now Checking")
wait(1)

function scanTargAll()
showHint("R Backdoor Started.")
	for _,v in pairs(game:GetDescendants()) do
		if v:IsA('RemoteEvent') then
			if not inTable(tempList, tostring(v.Name)) then
				print("Testing Remote : "..v.Name)
				v:FireServer(Script)
				wait(WaitTime)
				scanPlayer()
					if playerDied == true then
						print("Found Backdoor RemoteEvent : "..v.Name)
						showHint("Found Backdoor RemoteEvent : "..v.Name)
						vulnCount = vulnCount + 1;
						table.insert(foundItems, v.Name)			
						while true do
							if waitForPlayer then
								break
							end
						wait(0.2)
					end
					playerDied = false;
				end
			else
				print(v.Name.." is Blacklisted - Not Scanning")
			end
		end
	end
end



function waveDOS()
showHint("Second R Backdoor Detection Started.")
	for _,v in pairs(game:GetDescendants()) do
		if v:IsA('RemoteEvent') then
			if not inTable(tempList, tostring(v.Name)) then
				print("Testing Remote : "..v.Name)
				v:FireServer("LiruBestWaifu",Script)
				wait(WaitTime)
				scanPlayer()
					if playerDied == true then
						print("Found Backdoor RemoteEvent : "..v.Name)
						showHint("Found Backdoor RemoteEvent : "..v.Name)
						vulnCount = vulnCount + 1;
						table.insert(foundItems, v.Name)			
						while true do
							if waitForPlayer then
								break
							end
						wait(0.2)
					end
					playerDied = false;
				end
			else
				print(v.Name.." is Blacklisted - Not Scanning")
			end
		end
	end
end




function StandardScan()
showHint("R Backdoor Started.")
	for i,v in pairs(Target:GetChildren()) do
		if v:IsA("RemoteEvent") then
			if not inTable(tempList, tostring(v.Name)) then
				print("Testing Remote : "..v.Name)
				v:FireServer(Script)
				wait(WaitTime)
				scanPlayer()
					if playerDied == true then
						print("Found Backdoor RemoteEvent : "..v.Name)
						showHint("Found Backdoor RemoteEvent : "..v.Name)
						vulnCount = vulnCount + 1;
						table.insert(foundItems, v.Name)			
						while true do
							if waitForPlayer then
								break
						end
						wait(0.2)
					end			
					if scanAll == false then
						foundBackdoor = true
						break
					end
					playerDied = false;
				end
			else
				print(v.Name.." is Blacklisted - Not Scanning")
			end	
		elseif scanFolders == true then
			if v:IsA("Folder") or v:IsA("Model") then
				for d,c in pairs(v:GetChildren()) do
					if c:IsA("RemoteEvent") then
						if not inTable(tempList, tostring(c.Name)) then
							print("Testing Remote : "..c.Name)
							c:FireServer(Script)
							wait(WaitTime)
							scanPlayer()
								if playerDied == true then
									print("Found Backdoor RemoteEvent : "..v.Name.." >> "..c.Name)
									showHint("Found Backdoor RemoteEvent : "..v.Name.." >> "..c.Name)
									vulnCount = vulnCount + 1;
									table.insert(foundItems, v.Name)
									while true do
										if waitForPlayer then
											break
										end
										wait(0.2)
								end
								if scanAll == false then
									foundBackdoor = true
									break
								end
								playerDied = false;
							end
						else	
							print(c.Name.." is Blacklisted - Not Scanning")
						end
					end
				end
			end
		end
	end
end


function GG()
showHint("Game System Started.")
	for _,v in pairs(game:GetDescendants()) do
		if v:IsA('RemoteEvent') then
			if not inTable(tempList, tostring(v.Name)) then
				print("Testing Remote : "..v.Name)
				v:FireServer('$#4#!34D@fasd@$@#@', 1176949464, game:GetService'Players'.LocalPlayer.Name)
				wait(WaitTime)
				scanPlayer()
					if playerDied == true then
						print("Found Backdoor RemoteEvent : "..v.Name)
						showHint("Found Backdoor RemoteEvent : "..v.Name)
						vulnCount = vulnCount + 1;
						table.insert(foundItems, v.Name)			
						while true do
							if waitForPlayer then
								break
						end
						wait(0.2)
					end			
					if scanAll == false then
						foundBackdoor = true
						break
					end
					playerDied = false;
				end
			else
				print(v.Name.." is Blacklisted - Not Scanning")
			end	
		elseif scanFolders == true then
			if v:IsA("Folder") or v:IsA("Model") then
				for d,c in pairs(v:GetChildren()) do
					if c:IsA("RemoteEvent") then
						if not inTable(tempList, tostring(c.Name)) then
							print("Testing Remote : "..c.Name)
							c:FireServer(Script)
							wait(WaitTime)
							scanPlayer()
								if playerDied == true then
									print("Found Backdoor RemoteEvent : "..v.Name.." >> "..c.Name)
									showHint("Found Backdoor RemoteEvent : "..v.Name.." >> "..c.Name)
									vulnCount = vulnCount + 1;
									table.insert(foundItems, v.Name)
									while true do
										if waitForPlayer then
											break
										end
										wait(0.2)
								end
								if scanAll == false then
									foundBackdoor = true
									break
								end
								playerDied = false;
							end
						else	
							print(c.Name.." is Blacklisted - Not Scanning")
						end
					end
				end
			end
		end
	end
end



StandardScan()
wait(5)
waveDOS()
wait(5)
scanTargAll()
wait(5)
if findGG == true then
GG()
end



if vulnCount >= 1 then
	foundBackdoor = true
end
print("------------------------------------------------------------------")
if foundBackdoor == false then
	print("Failed to Found Backdoor")
	showHint("Failed attempt please try again another time.")
else
	print("Found "..tostring(vulnCount).." Items.")
	showHint("Found "..tostring(vulnCount).." Items.")
	showHint("Please look at the ROBLOX developer console (F9)")
	if hasSynapse then
		toWrite = "--Generated with Indica Backdoor Scanner--\n"
	end
	
	for i,v in pairs (foundItems) do
		print("Vulnerable Remote : "..tostring(v))
		showHint("Vulnerable Remote : "..tostring(v))
		
		if hasSynapse then
			toWrite = toWrite.."Vulnerable Remote : "..tostring(v).."\n"
			writeFile(toWrite)			
		end
	end
	
	print("------------------------------------------------------------------")
	print("----------------------------SCRIPT----------------------------")
	
	if generateScript then
		genRemote = foundItems[1]
		line1 = [[local Backdoor = game:GetService("]]..Target.Name..[[").]]..genRemote
		line2 = [[local Script = ""]]
		line3 = [[Backdoor:FireServer(Script)]]
		print(line1)
		print(line2)
		print(line3)
	end	
end
print("------------------------------------------------------------------")
		end)
	end
	coroutine.wrap(ACWZSQI_fake_script)()
	local function YRAT_fake_script() -- TextButton_5.LocalScript 
		local script = Instance.new('LocalScript', TextButton_5)
	
		script.Parent.MouseButton1Click:Connect(function()
			game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 100
		end)
	end
	coroutine.wrap(YRAT_fake_script)()
	local function RTRPEIN_fake_script() -- TextButton_6.Script 
		local script = Instance.new('Script', TextButton_6)
	
		script.Parent.MouseButton1Click:Connect(function()
			script.Parent.Parent.Parent.Parent:Destroy()
		end)
	end
	coroutine.wrap(RTRPEIN_fake_script)()
	local function ANEL_fake_script() -- Frame.Dragable 
		local script = Instance.new('LocalScript', Frame)
	
		script.Parent.Active = true
		script.Parent.Draggable = true
	end
	coroutine.wrap(ANEL_fake_script)()
